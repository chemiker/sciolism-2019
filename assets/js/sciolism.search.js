/**
 * [Function to grab JSON generated by Hugo and builds the lunr search index from it]
 */

var request = new XMLHttpRequest();
request.open('GET', '../index.json', true);

request.onload = function() {
  hugoPages = JSON.parse(request.responseText);

	lunrSearchIndex = lunr(function () {
		this.ref("title");
		this.field("url");
		this.field("tags");
		this.field("summary");
		this.field("language");

		hugoPages.forEach(function (page) {
				this.add(page)
		}, this)
	});

	// Once index is created populate the search UI
	populateSearchUI();
};

request.send();

/**
 * [populateSearchUI Prepares & populates the results container and search fields]
 */
function populateSearchUI() {
	if ( typeof window.location.search !== 'undefined' && window.location.search !== "" ) {
		var query = decodeURIComponent(window.location.search).substr(3).replace(/\+/g, ' ');

		if (query !== "") {
			document.querySelector(".searchInput").value = query;
      document.querySelector("#listHeadline em").textContent = query;
			renderResults( search(query) );
		} else {
			document.querySelector("#searchResults").textContent = "Please enter a keyword and try again.";
		}
	}
}

/**
 * Trigger a search in lunr and filter page database
 *
 * @param  {String} [query]
 * @return {Array}  [results]
 */
function search(query) {
	return lunrSearchIndex.search(query).map( function (result) {
	  return hugoPages.filter( function (page) {
	    return page.title == result.ref;
	  } )[0];
	} );
}

/**
 * Renders search results
 *
 * @param  {Array} results to display
 */
function renderResults(results) {
  if (results.length == 0) {
  	document.querySelector("#searchResults").textContent = "No results found, try again with a different keyword.";
  	return;
  }

  results.forEach(function (result, index) {
		// One could also use ` here so linebreak has not be escaped. However, IE11 does not support them so the "classical way" is used here instead.
		searchResultTemplate = "\
		<section lang='%language'> \
			<h2><a href='%url'>%title</a></h2> \
			<p>%summary</p> \
			<span class='readMore'><a href='%url' title='Continue reading'>Read moreâ€¦</a></span> \
		</section> \
		%seperator";

  	document.querySelector("#searchResults").insertAdjacentHTML('beforeend', searchResultTemplate
			.replace(/%url/g, result.url)
			.replace(/%title/g, result.title)
			.replace(/%language/g, (result.language ? result.language : document.querySelector("html").getAttribute('lang') ) ) // Use language as declared in post, otherwise fall back to default language
			.replace(/%summary/g, result.summary)
			.replace( /%seperator/g, ( results.length - 1 !== index ? "<hr />" : "") ) // -1 is used here because length start counting at 1
		) ;
  });
}
